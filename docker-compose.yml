version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3.8.9-management
    container_name: rabbitmq
    ports:
      - "5672:5672"    # AMQP порт
      - "15672:15672"  # Management UI порт
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
      - RABBITMQ_ERLANG_COOKIE=unique-cookie-here
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./resources:/opt/resources
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - app-network
  
  clickhouse:
    image: yandex/clickhouse-server:20.11.2
    container_name: clickhouse
    ports:
      - "8123:8123"    # HTTP порт
      - "9000:9000"    # Native порт
    volumes:
      - clickhouse_data:/var/lib/clickhouse    # Persistent storage
      - ./resources/clickhouse/config.xml:/etc/clickhouse-server/config.d/config.xml:ro
      - ./resources/clickhouse/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    environment:
      - CLICKHOUSE_USER=${CLICKHOUSE_USER}
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}
      - CLICKHOUSE_DB=${CLICKHOUSE_DB}
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8123/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    restart: unless-stopped
    depends_on:
      - rabbitmq
    networks:
      - app-network
  
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    container_name: rust-web-app
    restart: unless-stopped
    environment:
      - RUST_LOG=debug
      - DATABASE_URL=postgres://user:password@db:5432/dbname
      - CLICKHOUSE_URL=http://clickhouse:8123
      - CLICKHOUSE_DB=your_database
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=password
    depends_on:
      - db
      - rabbitmq
    networks:
      - app-network

  db:
    image: postgres:13
    container_name: postgres-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=dbname
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  rabbitmq_data:
    driver: local
  clickhouse_data:
    driver: local
  postgres-data: